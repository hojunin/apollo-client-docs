"use strict";(self.webpackChunkapollo_client=self.webpackChunkapollo_client||[]).push([[7567],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(t),d=r,f=u["".concat(p,".").concat(d)]||u[d]||c[d]||o;return t?a.createElement(f,l(l({ref:n},m),{},{components:t})):a.createElement(f,l({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},642:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),l=["components"],i={sidebar_position:5,title:"\ud504\ub798\uadf8\uba3c\ud2b8(fragment)"},p="Fragment - GQL \ucffc\ub9ac \uac04 \ud544\ub4dc \uacf5\uc720\ud558\uae30",s={unversionedId:"fetcing/fragment",id:"fetcing/fragment",isDocsHomePage:!1,title:"\ud504\ub798\uadf8\uba3c\ud2b8(fragment)",description:"---",source:"@site/docs/fetcing/fragment.md",sourceDirName:"fetcing",slug:"/fetcing/fragment",permalink:"/docs/fetcing/fragment",editUrl:"https://github.com/hojunin/apollo-client-docs/docs/fetcing/fragment.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"\ud504\ub798\uadf8\uba3c\ud2b8(fragment)"},sidebar:"tutorialSidebar",previous:{title:"\uad6c\ub3c5(Subscription)",permalink:"/docs/fetcing/subscription"},next:{title:"\uc5d0\ub7ec \ucc98\ub9ac(Error Handling)",permalink:"/docs/fetcing/error_handling"}},m=[{value:"\uc608\uc2dc\ub97c \ud1b5\ud574 \uc0ac\uc6a9\ubc95 \uc775\ud788\uae30",id:"\uc608\uc2dc\ub97c-\ud1b5\ud574-\uc0ac\uc6a9\ubc95-\uc775\ud788\uae30",children:[],level:2},{value:"Co-Located Component",id:"co-located-component",children:[{value:"Co-located fragment \ub9cc\ub4e4\uae30",id:"co-located-fragment-\ub9cc\ub4e4\uae30",children:[],level:3}],level:2},{value:"union\uacfc interface\ub97c \ud65c\uc6a9\ud55c fragment \ud65c\uc6a9",id:"union\uacfc-interface\ub97c-\ud65c\uc6a9\ud55c-fragment-\ud65c\uc6a9",children:[{value:"Defining\xa0possibleTypes\xa0manually",id:"definingpossibletypesmanually",children:[],level:3},{value:"Generating\xa0possibleTypes\xa0automatically",id:"generatingpossibletypesautomatically",children:[],level:3}],level:2}],c={toc:m};function u(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fragment---gql-\ucffc\ub9ac-\uac04-\ud544\ub4dc-\uacf5\uc720\ud558\uae30"},"Fragment - GQL \ucffc\ub9ac \uac04 \ud544\ub4dc \uacf5\uc720\ud558\uae30"),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/data/fragments/"},"Apollo Docs"),"\ub97c \ubc88\uc5ed \ubc0f \uc758\uc5ed\ud55c \ub0b4\uc6a9\uc785\ub2c8\ub2e4."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"GraphQL Fragment\ub294 \uc5ec\ub7ec \ucffc\ub9ac\ub098 \ubba4\ud14c\uc774\uc158 \uac04 \uacf5\uc720\ud560 \uc218 \uc788\ub294 \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ub2e8\uc704\uc785\ub2c8\ub2e4. OPP\uc758 \uc0c1\uc18d\uacfc \uadf8 \uac1c\ub150\uc774 \ub9e4\uc6b0 \uc720\uc0ac\ud569\ub2c8\ub2e4.\n\ub2e4\ub9cc GraphQL\uc774\uc9c0\ub9cc \uc11c\ubc84\uc5d0\uc11c \uc815\uc758\ud574\uc11c \uc0ac\uc6a9\ud560 \uc218\ub294 \uc5c6\uace0, \ud074\ub77c\uc774\uc5b8\ud2b8 \ub2e8\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ubb38\ubc95\uc784\uc744 \uc54c\uc544\ub450\uc2dc\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc608\uc2dc\ub97c \ud1b5\ud574 \uc774\ud574\ud574\ubd05\uc2dc\ub2e4."),(0,o.kt)("p",null,"\uc544\ub798 ",(0,o.kt)("inlineCode",{parentName:"p"},"NameParts"),"\ub77c\ub294 fragment\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\uc18d\uacfc \uc120\uc5b8 \ubc29\uc2dd\ub3c4 \ub611\uac19\uc2b5i\ub2c8\ub2e4. \uc774\ub807\uac8c \uc815\uc758\ub41c ",(0,o.kt)("inlineCode",{parentName:"p"},"NameParts"),"\ub294 \uc5b4\ub5a4 ",(0,o.kt)("inlineCode",{parentName:"p"},"Person")," \uac1d\uccb4\uc5d0\uc11c\ub4e0 \uadf8 \ud558\uc704(selection set)\uc5d0 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"type Person {\n    firstName\n    lastName\n    avatar(size: string)\n}\n\nfragment NameParts on Person {\n  firstName\n  lastName\n}\n")),(0,o.kt)("p",null,"\ubaa8\ub4e0 fragment\ub294 \ubd80\ubaa8 \uac1d\uccb4(\uc5ec\uae30\uc120 Person)\uac00 \uac00\uc9c4 field\ub97c \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \uc704 \uc608\uc2dc\uc758 Person\ud0c0\uc785\uc5d0\ub294 firstName\uacfc lastName \ud544\ub4dc\uac00 \ubb34\uc870\uac74 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. (\ubd80\ubaa8\uc5d0\uac8c \uc5c6\ub294 field\ub97c \ucd94\uac00\ud560 \uc21c \uc5c6\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4) \uc774 \uc810\uc774 \uc0c1\uc18d\uacfc\ub294 \ub2e4\ub974\ub2e4\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc774\ub807\uac8c \uc815\uc758\ub41c ",(0,o.kt)("inlineCode",{parentName:"p"},"NameParts"),"\ub294 \uc774\uc81c Person \uac1d\uccb4\uc640 \uc5f0\uad00\ub41c \ubaa8\ub4e0 \ubd80\ubd84\uc5d0\uc11c \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc2dc\ub97c \ubcfc\uaed8\uc694. ",(0,o.kt)("inlineCode",{parentName:"p"},"Person"),"\uac1d\uccb4\ub97c \ub9ac\ud134\ud558\ub294 people \ucffc\ub9ac\uc5d0 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ubc95\uc740 JS\uc758 \uad6c\uc870 \ubd84\ud574 \uc5f0\uc0b0\uc790(...)\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// fragment\ub97c \uc0ac\uc6a9\ud588\uc744 \ub54c\nquery GetPerson {\n  people(id: "7") {\n    ...NameParts\n    avatar(size: LARGE)\n  }\n}\n// fragment\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc558\uc744 \ub54c\nquery GetPerson {\n  people(id: "7") {\n    firstName\n    lastName\n    avatar(size: LARGE)\n  }\n}\n')),(0,o.kt)("p",null,"\uc704 \ucf54\ub4dc\uc5d0\uc11c \ub450 \ucffc\ub9ac\ub294 \uc644\ubcbd\ud558\uac8c \ub3d9\uc77c\ud569\ub2c8\ub2e4."),(0,o.kt)("hr",null),(0,o.kt)("p",null,"\ub9cc\uc57d \ub098\uc911\uc5d0 ",(0,o.kt)("inlineCode",{parentName:"p"},"NameParts"),"\uc758 \uc77c\ubd80 \ud544\ub4dc\ub97c \uc218\uc815\ud560 \uc77c\uc774 \uc0dd\uae30\uba74, \uadf8\uc800 ",(0,o.kt)("inlineCode",{parentName:"p"},"NamParts"),"\ub97c \uace0\uce58\ub294 \uac83 \ub9cc\uc73c\ub85c ",(0,o.kt)("inlineCode",{parentName:"p"},"NameParts"),"\ub97c \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 ",(0,o.kt)("inlineCode",{parentName:"p"},"Person")," \uac1d\uccb4\ub4e4\uc774 \ubcc0\uacbd\ub429\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"\uc608\uc2dc\ub97c-\ud1b5\ud574-\uc0ac\uc6a9\ubc95-\uc775\ud788\uae30"},"\uc608\uc2dc\ub97c \ud1b5\ud574 \uc0ac\uc6a9\ubc95 \uc775\ud788\uae30"),(0,o.kt)("p",null,"\uc6b0\ub9ac\uac00 GraphQL\uc744 \ud65c\uc6a9\ud55c \ube14\ub85c\uadf8 \uc11c\ube44\uc2a4\ub97c \ud558\uace0 \uc788\ub2e4\uace0 \uac00\uc815\ud574\ubd05\uc2dc\ub2e4. \uadf8 \uc911 ",(0,o.kt)("inlineCode",{parentName:"p"},"Comment")," \uae30\ub2a5\uc744 \uc0dd\uac01\ud574\ubd10\uc694. \uc5b4\ub5a4 \uac8c\uc2dc\uae00\uc758 \ub313\uae00\uc744 \ubd88\ub7ec\uc624\ub294 \uae30\ub2a5, \ub313\uae00 \uc791\uc131 \uae30\ub2a5 \ub4f1\ub4f1\uc774 \uc788\uaca0\uc8e0? \uc544\ub9c8 \uc774\ub7f0 \uae30\ub2a5\ub4e4\uc740 \uc804\ubd80 ",(0,o.kt)("inlineCode",{parentName:"p"},"Comment")," \ud0c0\uc785 \uac1d\uccb4\ub97c \ud3ec\ud568\ud558\uace0 \uc788\uc744\uac81\ub2c8\ub2e4"),(0,o.kt)("p",null,"\uc774 \uc911 \ud544\uc694\ud55c field\ub4e4\ub9cc \uace8\ub77c\ub0b4\uae30 \uc704\ud574 \ub2e4\uc74c\uacfc \uac19\uc774 ",(0,o.kt)("inlineCode",{parentName:"p"},"Comment"),"\uc758 \uc77c\ubd80\ub97c fragment\ub85c \uc815\uc758\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"//fragments.ts\nimport { gql } from '@apollo/client';\n\nexport const CORE_COMMENT_FIELDS = gql`\n    fragment CoreCommentFields on Comment {\n        id\n        postedBy {\n            username\n            displayName\n        }\n        createdAt\n        content\n    }\n`;\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"fragment \ud30c\uc77c\uc740 \uc5b4\ub5a4 \ud30c\uc77c\uc5d0\ub4e0 \ub9cc\ub4dc\uc154\ub3c4 \ub429\ub2c8\ub2e4. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \ud2b9\uc815 \ud30c\uc77c\uc5d0 \uc120\uc5b8\ud558\uace0 export\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("p",null,"\uadf8\ub9ac\uace0 ",(0,o.kt)("inlineCode",{parentName:"p"},"CoreCommentFields"),"\ub97c gql document\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc774 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ucffc\ub9ac\ub294 Post(\uac8c\uc2dc\uae00)\uc744 \ubd88\ub7ec\uc624\ub294 \ucffc\ub9ac\uc5d0 \ub538\ub824\uc624\ub294 Comment\ucffc\ub9ac\uc758 \ubaa8\ub4e0 field\ub4e4\uc744 ",(0,o.kt)("inlineCode",{parentName:"p"},"CoreCommentField"),"\ub77c\ub294 fragment\ub85c \uce58\ud658\ud574 \ubc84\ub9b0\uac81\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"//PostDetails.jsx\nimport { gql } from '@apollo/client';\nimport { CORE_COMMENT_FIELDS } from './fragments'; // 1\nexport const GET_POST_DETAILS = gql`\n    ${CORE_COMMENT_FIELDS}\n    query CommentsForPost($postId: ID!) {\n        post(postId: $postId) {\n            title\n            body\n            author\n            comments {\n                ...CoreCommentFields\n            }\n        }\n    }\n`;\n\n// ...PostDetails component definition...\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\uc6b0\uc120 \ub2e4\ub978 \ud30c\uc77c\uc5d0 \uc815\uc758\ud574\ub193\uc740 fragment \ud30c\uc77c\uc744 \ubd88\ub7ec\uc635\ub2c8\ub2e4.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\ubd88\ub7ec\uc628 \ud30c\uc77c\uc744 gql document\uc5d0 \ub118\uaca8\uc90d\ub2c8\ub2e4. \uc774 \ub54c gql template litera\uc5d0 \ub118\uaca8\uc8fc\ub294 \uac83\uc774\ubbc0\ub85c JS template literal \ubb38\ubc95\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4(ES6\uc5d0 \ucd94\uac00\ub41c \uadf8 \ubb38\ubc95) \u21d2 ",(0,o.kt)("inlineCode",{parentName:"li"},"${CoreCommentFileds}")),(0,o.kt)("li",{parentName:"ul"},"gql document\uc5d0\uc11c \ub118\uaca8\ubc1b\uc558\uc73c\uba74, fragment\ub97c \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc740 \ubd80\ubd84\uc5d0 \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4.")),(0,o.kt)("h2",{id:"co-located-component"},"Co-Located Component"),(0,o.kt)("p",null,"Co-located fragment\ub294 \uac19\uc740 \uacf3\uc5d0 \uc704\uce58\ud55c fragment\ub77c\ub294 \ub73b\uc785\ub2c8\ub2e4."),(0,o.kt)("p",null,"\ud2b8\ub9ac\ubaa8\uc591\uc758 GraphQL \uacb0\uacfc\uac12\uc740 FrontEnd\uc758 \ucef4\ud3ec\ub10c\ud2b8 \ub80c\ub354\ub9c1 \ud2b8\ub9ac\uc640 \ud761\uc0ac\ud569\ub2c8\ub2e4(Dom\uc744 \ub9d0\ud558\ub294\ub4ef \ud568) \ub355\ubd84\uc5d0 \uac01\uac01\uc758 \ucef4\ud3ec\ub10c\ud2b8\uac00 \uc815\ud655\ud558\uac8c \uc790\uc2e0\uc774 \uc0ac\uc6a9\ud558\ub294 \ud544\ub4dc\ub9cc \uc694\uccad\ud560 \uc218 \uc788\uac8c \ucef4\ud3ec\ub10c\ud2b8\ub4e4 \uac04 \ucffc\ub9ac \ub85c\uc9c1\uc744 \ubd84\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ucef4\ud3ec\ub10c\ud2b8\uc758 \ub85c\uc9c1\uc774 \uac04\uacb0\ud574\uc9c0\ub294 \uc7a5\uc810\uc774 \uc788\uc8e0."),(0,o.kt)("p",null,"\ub2e4\uc74c \uc6f9/\uc571 \ucef4\ud3ec\ub10c\ud2b8 \uad6c\uc870\ub97c \ud55c\ubc88 \ubd05\uc2dc\ub2e4. \uc544\uc2dc\ub2e4\uc2dc\ud53c \ud2b8\ub9ac\ubaa8\uc591\uc785\ub2c8\ub2e4. \uc774\ud574\ub97c \uc704\ud574 \uc800\ud76c \ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\uad6c\uc870\uc5d0 \uc801\uc6a9\ud574\ubcf4\uba74, FeedPage\ub77c\ub294 \ud398\uc774\uc9c0\ub294 Feed\ub77c\ub294 organism\uc744 \uac00\uc9c0\uace0, Feed\ub294 \ub370\uc774\ud130\uc778 FeedEntry\ub97c \ubc1b\uc544\uc11c molcule\uc778 EntryInfo\uc640 VoteButtons\ub97c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"FeedPage\n\u2514\u2500\u2500 Feed\n    \u2514\u2500\u2500 FeedEntry\n        \u251c\u2500\u2500 EntryInfo\n        \u2514\u2500\u2500 VoteButtons\n")),(0,o.kt)("p",null,"\uc774 \uc571\uc5d0\uc11c FeedPage \ucef4\ud3ec\ub10c\ud2b8\ub294 FeedEntry\uac1d\uccb4\uc758 \ub9ac\uc2a4\ud2b8\ub97c \uac00\uc838\uc624\ub294 \ucffc\ub9ac\ub97c \uc2e4\ud589\uc2dc\ud0b5\ub2c8\ub2e4. \ud558\uc704 \ucef4\ud3ec\ub10c\ud2b8\uc778EntryInfo\uc640 VoteButtons\ub294 \uadf8 FeedEntry \uac1d\uccb4 \ub370\uc774\ud130\uc758 \uc77c\ubd80\ubd84\ub9cc\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"co-located-fragment-\ub9cc\ub4e4\uae30"},"Co-located fragment \ub9cc\ub4e4\uae30"),(0,o.kt)("p",null,"\ud2b9\uc815\ud55c \ucef4\ud3ec\ub10c\ud2b8\ub9c8\ub2e4 \ud560\ub2f9\ub41c\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uba74 colocated fragment\ub77c\uace0 \uc77c\ubc18 fragment\uc640 \ub2e4\ub97c\uac8c \uc5c6\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc704\uc758 \uc608\uc2dc\uc5d0\uc11c ",(0,o.kt)("inlineCode",{parentName:"p"},"FeedPage"),"\uc758 child \ucef4\ud3ec\ub10c\ud2b8\uc778 ",(0,o.kt)("inlineCode",{parentName:"p"},"VoteButton")," FeedEntry\uc758 \uc77c\ubd80 field\uc778 score\uc640 vote{ choice } \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"// VoteButtons.jsx\nVoteButtons.fragments = {\n    entry: gql`\n        fragment VoteButtonsFragment on FeedEntry {\n            score\n            vote {\n                choice\n            }\n        }\n    `,\n};\n")),(0,o.kt)("p",null,"After you define a fragment in a child component, the\xa0",(0,o.kt)("em",{parentName:"p"},"parent"),"\xa0component can refer to it in its\xa0",(0,o.kt)("em",{parentName:"p"},"own"),"\xa0colocated fragments, like so:"),(0,o.kt)("p",null,"child \ucef4\ud3ec\ub10c\ud2b8\uc5d0 fragment\ub97c \uc815\uc758\ud55c \ud6c4, parent \ucef4\ud3ec\ub10c\ud2b8\ub294 \ub2e4\uc74c\uacfc \uac19\uc774"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"///FeedEntry.jsx\nFeedEntry.fragments = {\n    entry: gql`\n        fragment FeedEntryFragment on FeedEntry {\n            commentCount\n            repository {\n                full_name\n                html_url\n                owner {\n                    avatar_url\n                }\n            }\n            ...VoteButtonsFragment\n            ...EntryInfoFragment\n        }\n        ${VoteButtons.fragments.entry}\n        ${EntryInfo.fragments.entry}\n    `,\n};\n")),(0,o.kt)("p",null,"There's nothing special about the naming of\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"VoteButtons.fragments.entry"),"\xa0or\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"EntryInfo.fragments.entry"),". Any naming convention works as long as you can retrieve a component's fragments given the component."),(0,o.kt)("h2",{id:"union\uacfc-interface\ub97c-\ud65c\uc6a9\ud55c-fragment-\ud65c\uc6a9"},"union\uacfc interface\ub97c \ud65c\uc6a9\ud55c fragment \ud65c\uc6a9"),(0,o.kt)("p",null,"union\uacfc interface\ubc29\uc2dd\uc73c\ub85c\ub3c4 fragment\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uc608\uc2dc\ub85c inline fragment 3\uac1c\uac00 \ud568\uaed8 \uc4f0\uc778 \ucffc\ub9ac\ub97c \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. inline fragment\ub780 fragment \uc120\uc5b8 \uc5c6\uc774 \uc0ac\uc6a9\ud558\ub294 fragment\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"query AllCharacters {\n  all_characters {\n\n    ... on Character {\n      name\n    }\n\n    ... on Jedi {\n      side\n    }\n\n    ... on Droid {\n      model\n    }\n  }\n}\n")),(0,o.kt)("p",null,"The\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"all_characters"),"\xa0query above returns a list of\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Character"),"\xa0objects. The\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Character"),"\xa0type is an interface that both the\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Jedi"),"\xa0and\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Droid"),"\xa0types implement. Each item in the list includes a\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"side"),"\xa0field if it's an object of type\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Jedi"),", and it includes a\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"model"),"\xa0field if it's of type\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Droid"),"."),(0,o.kt)("p",null,"\uc704 \uc608\uc2dc\uc5d0\uc11c all_characters \ucffc\ub9ac\ub294 Character \uac1d\uccb4\uc758 \ubc30\uc5f4\uc744 \ub9ac\ud134\ud569\ub2c8\ub2e4. Character \ud0c0\uc785"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"However"),", for this query to work, your client needs to understand the polymorphic relationship between the\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Character"),"\xa0interface and the types that implement it. To inform the client about these relationships, you can pass a\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"possibleTypes"),"\xa0option when you initialize your\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"InMemoryCache"),"."),(0,o.kt)("h3",{id:"definingpossibletypesmanually"},(0,o.kt)("a",{parentName:"h3",href:"https://www.apollographql.com/docs/react/data/fragments/#defining-possibletypes-manually"},"Defining\xa0",(0,o.kt)("inlineCode",{parentName:"a"},"possibleTypes"),"\xa0manually")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The\xa0possibleTypes\xa0option is available in Apollo Client 3.0 and later.")),(0,o.kt)("p",null,"You can pass a\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"possibleTypes"),"\xa0option to the\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"InMemoryCache"),"\xa0constructor to specify supertype-subtype relationships in your schema. This object maps the name of an interface or union type (the supertype) to the types that implement or belong to it (the subtypes)."),(0,o.kt)("p",null,"Here's an example\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"possibleTypes"),"\xa0declaration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const cache = new InMemoryCache({\n    possibleTypes: {\n        Character: ['Jedi', 'Droid'],\n        Test: ['PassingTest', 'FailingTest', 'SkippedTest'],\n        Snake: ['Viper', 'Python'],\n    },\n});\n")),(0,o.kt)("p",null,"This example lists three interfaces (",(0,o.kt)("inlineCode",{parentName:"p"},"Character"),",\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Test"),", and\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"Snake"),") and the object types that implement them."),(0,o.kt)("p",null,"If your schema includes only a few unions and interfaces, you can probably specify your\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"possibleTypes"),"\xa0manually without issue. However, as your schema grows in size and complexity, you should consider\xa0",(0,o.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/data/fragments/#generating-possibletypes-automatically"},"generating\xa0",(0,o.kt)("inlineCode",{parentName:"a"},"possibleTypes"),"\xa0automatically from your schema"),"."),(0,o.kt)("h3",{id:"generatingpossibletypesautomatically"},(0,o.kt)("a",{parentName:"h3",href:"https://www.apollographql.com/docs/react/data/fragments/#generating-possibletypes-automatically"},"Generating\xa0",(0,o.kt)("inlineCode",{parentName:"a"},"possibleTypes"),"\xa0automatically")),(0,o.kt)("p",null,"The following example script translates a GraphQL introspection query into a\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"possibleTypes"),"\xa0configuration object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const fetch = require('cross-fetch');\nconst fs = require('fs');\n\nfetch(`${YOUR_API_HOST}/graphql`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n        variables: {},\n        query: `\n      {\n        __schema {\n          types {\n            kind\n            name\n            possibleTypes {\n              name\n            }\n          }\n        }\n      }\n    `,\n    }),\n})\n    .then((result) => result.json())\n    .then((result) => {\n        const possibleTypes = {};\n\n        result.data.__schema.types.forEach((supertype) => {\n            if (supertype.possibleTypes) {\n                possibleTypes[supertype.name] = supertype.possibleTypes.map((subtype) => subtype.name);\n            }\n        });\n\n        fs.writeFile('./possibleTypes.json', JSON.stringify(possibleTypes), (err) => {\n            if (err) {\n                console.error('Error writing possibleTypes.json', err);\n            } else {\n                console.log('Fragment types successfully extracted!');\n            }\n        });\n    });\n")),(0,o.kt)("p",null,"You can then\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"import"),"\xa0the generated\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"possibleTypes"),"\xa0JSON module into the file where you create your\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"InMemoryCache"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import possibleTypes from './path/to/possibleTypes.json';\n\nconst cache = new InMemoryCache({\n    possibleTypes,\n});\n")))}u.isMDXComponent=!0}}]);